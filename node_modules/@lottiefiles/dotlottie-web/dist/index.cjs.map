{"version":3,"sources":["../src/animation-frame-manager.ts","../src/constants.ts","../package.json","../src/core/dotlottie-player.js","../src/core/dotlottie-wasm-loader.ts","../src/event-manager.ts","../src/dotlottie.ts"],"names":["WebAnimationFrameStrategy","callback","id","NodeAnimationFrameStrategy","__publicField","_id","AnimationFrameManager","IS_BROWSER","package_default","createDotLottiePlayerModule","_scriptDir","moduleArg","Module","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","locateFile","path","read_","readAsync","readBinary","url","xhr","onload","onerror","out","err","wasmBinary","abort","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","what","e","dataURIPrefix","isDataURI","filename","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","response","instantiateArrayBuffer","imports","receiver","binary","instance","reason","instantiateAsync","result","createWasm","info","wasmImports","receiveInstance","module","wasmExports","wasmTable","receiveInstantiationResult","callbacks","noExitRuntime","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","___assert_fail","condition","line","func","ExceptionInfo","excPtr","type","destructor","caught","rethrown","adjustedPtr","isPointer","___cxa_is_pointer_type","adjusted","exceptionLast","uncaughtExceptionCount","___cxa_throw","SYSCALLS","ret","___syscall_fcntl64","fd","cmd","varargs","lengthBytesUTF8","len","i","c","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","___syscall_getcwd","buf","size","___syscall_ioctl","op","___syscall_openat","dirfd","flags","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","message","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fieldTypes","field","fields","fieldName","getterReturnType","getter","getterContext","setterArgumentType","setter","setterContext","o","rv","GenericWireTypeSize","__embind_register_bigint","primitiveType","name","minRange","maxRange","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","registeredPointers","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","RegisteredPointer_fromWireType","rawPointer","makeDefaultHandle","actualType","registeredPointerRecord","toType","dp","init_ClassHandle","ClassHandle","other","leftClass","left","rightClass","right","clone","createNamedFunction","body","ensureOverloadTable","proto","methodName","humanName","prevFunc","exposePublicSymbol","value","numArguments","char_0","char_9","makeLegalFunctionName","f","RegisteredClass","constructor","instancePrototype","baseClass","getActualType","upcast","downcast","upcastPointer","constNoSmartPtrRawPointerToWireType","embindRepr","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","readPointer","init_RegisteredPointer","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawShare","replacePublicSymbol","dynCallLegacy","sig","args","getWasmTableEntry","funcPtr","dynCall","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","extendError","baseErrorType","errorName","errorClass","stack","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","_a","basePrototype","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","count","firstElement","array","usesDestructorStack","argTypes","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","isAsync","argCount","isClassMethodFunc","needsDestructorStack","returns","expectedArgCount","argsWired","invokerFuncArgs","invokerFn","thisWired","onDone","param","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","getFunctionName","argsIndex","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","memberFunction","handleAllocatorInit","HandleAllocator","emval_handles","__emval_decref","count_emval_handles","init_emval","__embind_register_emval","enumReadValueFromPointer","width","signed","__embind_register_enum","isSigned","ctor","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","v","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","__embind_register_smart_ptr","rawPointeeType","getPointeeSignature","constructorSignature","shareSignature","registeredPointer","__embind_register_std_string","stdStringIsUTF8","length","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","valueIsOfTypeString","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","shift","HEAP","maxReadBytes","__embind_register_value_object","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","__emscripten_throw_longjmp","emval_methodCallers","__emval_call","caller","destructorsRef","emval_addMethodCaller","emval_lookupTypes","reflectConstruct","emval_returnValue","returnType","__emval_get_method_caller","kind","retType","argN","invokerFunction","offset","functionName","t","__emval_incref","__emval_run_destructors","__emval_take_value","arg","_abort","_emscripten_get_now","_emscripten_memcpy_js","dest","src","num","getHeapMax","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","strings","stringToAscii","buffer","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","iov","iovcnt","pnum","convertI32PairToI53Checked","lo","hi","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","_fd_write","j","initRandomFill","view","randomFill","_getentropy","isLeapYear","year","arraySum","index","sum","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","addDays","date","days","newDate","leap","currentMonth","daysInCurrentMonth","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","writeArrayToMemory","_strftime","s","maxsize","format","tm","tm_zone","pattern","EXPANSION_RULES_1","rule","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","val","jan1","dec31","off","ahead","bytes","_strftime_l","loc","invoke_ii","invoke_iii","invoke_iiii","invoke_iiiiii","invoke_vi","invoke_vii","invoke_viiii","invoke_viiij","___wasm_call_ctors","a0","___errno_location","_htonl","_htons","_ntohs","_setThrew","a1","stackSave","stackRestore","___cxa_increment_exception_refcount","dynCall_iijj","a2","a3","a4","a5","dynCall_vijj","dynCall_jii","dynCall_viiij","dynCall_jiji","dynCall_viijii","a6","dynCall_iiiiij","dynCall_iiiiijj","a7","a8","dynCall_iiiiiijj","a9","sp","calledRun","runCaller","run","doRun","dotlottie_player_default","DotLottieWasmLoader","initialError","backupUrl","backupError","EventManager","listener","listeners","event","createCoreMode","mode","createCoreSegments","segments","coreSegments","DotLottie","config","error","load","contentType","height","loaded","manifest","manifestJson","imageData","nextFrame","ok","frame","speed","color","loop","useFrameInterpolation","dpr","clientHeight","clientWidth","startFrame","endFrame","animationId"],"mappings":"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","sourcesContent":["/**\n * Copyright 2023 Design Barn Inc.\n */\n\n/* eslint-disable max-classes-per-file */\n\ninterface AnimationFrameStrategy {\n  cancelAnimationFrame(id: number): void;\n  requestAnimationFrame(callback: (time: number) => void): number;\n}\n\nclass WebAnimationFrameStrategy implements AnimationFrameStrategy {\n  public requestAnimationFrame(callback: (time: number) => void): number {\n    return requestAnimationFrame(callback);\n  }\n\n  public cancelAnimationFrame(id: number): void {\n    cancelAnimationFrame(id);\n  }\n}\n\nclass NodeAnimationFrameStrategy implements AnimationFrameStrategy {\n  private _lastHandleId: number = 0;\n\n  private _lastImmediate: NodeJS.Immediate | null = null;\n\n  public requestAnimationFrame(callback: (time: number) => void): number {\n    if (this._lastHandleId >= Number.MAX_SAFE_INTEGER) {\n      this._lastHandleId = 0;\n    }\n\n    this._lastHandleId += 1;\n\n    this._lastImmediate = setImmediate(() => {\n      callback(Date.now());\n    });\n\n    return this._lastHandleId;\n  }\n\n  public cancelAnimationFrame(_id: number): void {\n    if (this._lastImmediate) {\n      clearImmediate(this._lastImmediate);\n    }\n  }\n}\n\nexport class AnimationFrameManager {\n  private readonly _strategy: AnimationFrameStrategy;\n\n  public constructor() {\n    this._strategy =\n      typeof requestAnimationFrame === 'function' ? new WebAnimationFrameStrategy() : new NodeAnimationFrameStrategy();\n  }\n\n  public requestAnimationFrame(callback: (time: number) => void): number {\n    return this._strategy.requestAnimationFrame(callback);\n  }\n\n  public cancelAnimationFrame(id: number): void {\n    this._strategy.cancelAnimationFrame(id);\n  }\n}\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nexport const IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport const MS_TO_SEC_FACTOR = 1000;\nexport const DEFAULT_BG_COLOR = '#00000000';\n","{\n  \"name\": \"@lottiefiles/dotlottie-web\",\n  \"version\": \"0.15.0\",\n  \"type\": \"module\",\n  \"description\": \"Lottie and DotLottie player for the web\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/LottieFiles/dotlottie-web.git\",\n    \"directory\": \"packages/web\"\n  },\n  \"homepage\": \"https://github.com/LottieFiles/dotlottie-web#readme\",\n  \"bugs\": \"https://github.com/LottieFiles/dotlottie-web/issues\",\n  \"author\": \"LottieFiles\",\n  \"contributors\": [\n    \"Abdelrahman Ashraf <a.theashraf@gmail.com>\"\n  ],\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"dotlottie\",\n    \"lottie\",\n    \"player\",\n    \"animation\",\n    \"web\",\n    \"canvas\",\n    \"javascript\",\n    \"thorvg\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"lint\": \"eslint --fix .\",\n    \"stats:eslint\": \"cross-env TIMING=1 eslint .\",\n    \"stats:ts\": \"tsc -p tsconfig.build.json --extendedDiagnostics\",\n    \"test\": \"vitest run --browser.headless\",\n    \"test:coverage\": \"vitest run --browser.headless --coverage\",\n    \"test:watch\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.10.5\",\n    \"@vitest/browser\": \"^1.2.2 \",\n    \"@vitest/coverage-istanbul\": \"^1.2.2\",\n    \"cross-env\": \"7.0.3\",\n    \"tsup\": \"8.0.1\",\n    \"typescript\": \"5.0.4\",\n    \"vitest\": \"^1.2.2\",\n    \"webdriverio\": \"^8.32.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  }\n}\n","var createDotLottiePlayerModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n  return function (moduleArg = {}) {\n    var Module = moduleArg;\n\n    var readyPromiseResolve, readyPromiseReject;\n\n    Module['ready'] = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n\n    var thisProgram = './this.program';\n\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = true;\n\n    var ENVIRONMENT_IS_WORKER = false;\n\n    var scriptDirectory = '';\n\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1);\n      } else {\n        scriptDirectory = '';\n      }\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(/** @type{!ArrayBuffer} */ (xhr.response));\n          };\n        }\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n\n    var err = Module['printErr'] || console.error.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var wasmBinary;\n\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    var /** @type {!Int8Array} */ HEAP8,\n      /** @type {!Uint8Array} */ HEAPU8,\n      /** @type {!Int16Array} */ HEAP16,\n      /** @type {!Uint16Array} */ HEAPU16,\n      /** @type {!Int32Array} */ HEAP32,\n      /** @type {!Uint32Array} */ HEAPU32,\n      /** @type {!Float32Array} */ HEAPF32,\n      /** @type {!Float64Array} */ HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n    }\n\n    var __ATPRERUN__ = [];\n\n    var __ATINIT__ = [];\n\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n\n    var runDependencyWatcher = null;\n\n    var dependenciesFulfilled = null;\n\n    function addRunDependency(id) {\n      runDependencies++;\n      Module['monitorRunDependencies']?.(runDependencies);\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n      Module['monitorRunDependencies']?.(runDependencies);\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    /** @param {string|number=} what */ function abort(what) {\n      Module['onAbort']?.(what);\n      what = 'Aborted(' + what + ')';\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += '. Build with -sASSERTIONS for more info.';\n      /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    /**\n     * Indicates whether filename is a base64 data URI.\n     * @noinline\n     */ var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n    var wasmBinaryFile;\n\n    wasmBinaryFile = 'DotLottiePlayer.wasm';\n\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(binaryFile, {\n            credentials: 'same-origin',\n          })\n            .then((response) => {\n              if (!response['ok']) {\n                throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(() => getBinarySync(binaryFile));\n        }\n      }\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => WebAssembly.instantiate(binary, imports))\n        .then((instance) => instance)\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(binaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(binaryFile, {\n          credentials: 'same-origin',\n        }).then((response) => {\n          /** @suppress {checkTypes} */ var result = WebAssembly.instantiateStreaming(response, imports);\n          return result.then(callback, function (reason) {\n            err(`wasm streaming compile failed: ${reason}`);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(binaryFile, imports, callback);\n          });\n        });\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function createWasm() {\n      var info = {\n        a: wasmImports,\n      };\n      /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports['Z'];\n        updateMemoryViews();\n        wasmTable = wasmExports['aa'];\n        addOnInit(wasmExports['_']);\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n      addRunDependency('wasm-instantiate');\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n          readyPromiseReject(e);\n        }\n      }\n      instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n      return {};\n    }\n\n    var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    };\n\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */ var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        }\n      }\n      return str;\n    };\n\n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */ var UTF8ToString = (ptr, maxBytesToRead) => (ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '');\n\n    var ___assert_fail = (condition, filename, line, func) => {\n      abort(\n        `Assertion failed: ${UTF8ToString(condition)}, at: ` +\n          [\n            filename ? UTF8ToString(filename) : 'unknown filename',\n            line,\n            func ? UTF8ToString(func) : 'unknown function',\n          ],\n      );\n    };\n\n    /** @constructor */ function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n      this.set_type = function (type) {\n        HEAPU32[(this.ptr + 4) >> 2] = type;\n      };\n      this.get_type = function () {\n        return HEAPU32[(this.ptr + 4) >> 2];\n      };\n      this.set_destructor = function (destructor) {\n        HEAPU32[(this.ptr + 8) >> 2] = destructor;\n      };\n      this.get_destructor = function () {\n        return HEAPU32[(this.ptr + 8) >> 2];\n      };\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(this.ptr + 12) >> 0] = caught;\n      };\n      this.get_caught = function () {\n        return HEAP8[(this.ptr + 12) >> 0] != 0;\n      };\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(this.ptr + 13) >> 0] = rethrown;\n      };\n      this.get_rethrown = function () {\n        return HEAP8[(this.ptr + 13) >> 0] != 0;\n      };\n      this.init = function (type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      };\n      this.set_adjusted_ptr = function (adjustedPtr) {\n        HEAPU32[(this.ptr + 16) >> 2] = adjustedPtr;\n      };\n      this.get_adjusted_ptr = function () {\n        return HEAPU32[(this.ptr + 16) >> 2];\n      };\n      this.get_exception_ptr = function () {\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[this.excPtr >> 2];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n\n    var exceptionLast = 0;\n\n    var uncaughtExceptionCount = 0;\n\n    var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n\n    var SYSCALLS = {\n      varargs: undefined,\n      get() {\n        var ret = HEAP32[+SYSCALLS.varargs >> 2];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n      getp() {\n        return SYSCALLS.get();\n      },\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      return 0;\n    }\n\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 127) {\n          len++;\n        } else if (c <= 2047) {\n          len += 2;\n        } else if (c >= 55296 && c <= 57343) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | (u >> 6);\n          heap[outIdx++] = 128 | (u & 63);\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | (u >> 12);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | (u >> 18);\n          heap[outIdx++] = 128 | ((u >> 12) & 63);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n\n    var ___syscall_getcwd = (buf, size) => {};\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      return 0;\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n    }\n\n    var structRegistrations = {};\n\n    var runDestructors = (destructors) => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n\n    /** @suppress {globalThis} */ function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[pointer >> 2]);\n    }\n\n    var awaitingDependencies = {};\n\n    var registeredTypes = {};\n\n    var typeDependencies = {};\n\n    var InternalError;\n\n    var throwInternalError = (message) => {\n      throw new InternalError(message);\n    };\n\n    var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError('Mismatched type converter count');\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n\n    var __embind_finalize_value_object = (structType) => {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords\n        .map((field) => field.getterReturnType)\n        .concat(fieldRecords.map((field) => field.setterArgumentType));\n      whenDependentTypesAreResolved([structType], fieldTypes, (fieldTypes) => {\n        var fields = {};\n        fieldRecords.forEach((field, i) => {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: (ptr) => getterReturnType['fromWireType'](getter(getterContext, ptr)),\n            write: (ptr, o) => {\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));\n              runDestructors(destructors);\n            },\n          };\n        });\n        return [\n          {\n            name: reg.name,\n            fromWireType: (ptr) => {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            },\n            toWireType: (destructors, o) => {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError(`Missing field: \"${fieldName}\"`);\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            },\n            argPackAdvance: GenericWireTypeSize,\n            readValueFromPointer: simpleReadValueFromPointer,\n            destructorFunction: rawDestructor,\n          },\n        ];\n      });\n    };\n\n    var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {};\n\n    var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n\n    var embind_charCodes;\n\n    var readLatin1String = (ptr) => {\n      var ret = '';\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n\n    var BindingError;\n\n    var throwBindingError = (message) => {\n      throw new BindingError(message);\n    };\n\n    /** @param {Object=} options */ function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n\n    /** @param {Object=} options */ function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n        throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n\n    var GenericWireTypeSize = 8;\n\n    /** @suppress {globalThis} */ var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (wt) {\n          return !!wt;\n        },\n        toWireType: function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: function (pointer) {\n          return this['fromWireType'](HEAPU8[pointer]);\n        },\n        destructorFunction: null,\n      });\n    };\n\n    var shallowCopyInternalPointer = (o) => ({\n      count: o.count,\n      deleteScheduled: o.deleteScheduled,\n      preservePointerOnDelete: o.preservePointerOnDelete,\n      ptr: o.ptr,\n      ptrType: o.ptrType,\n      smartPtr: o.smartPtr,\n      smartPtrType: o.smartPtrType,\n    });\n\n    var throwInstanceAlreadyDeleted = (obj) => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    };\n\n    var finalizationRegistry = false;\n\n    var detachFinalizer = (handle) => {};\n\n    var runDestructor = ($$) => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n\n    var releaseClassHandle = ($$) => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n\n    var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null;\n      }\n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    };\n\n    var registeredPointers = {};\n\n    var getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n\n    var getLiveInheritedInstances = () => {\n      var rv = [];\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n      return rv;\n    };\n\n    var deletionQueue = [];\n\n    var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj['delete']();\n      }\n    };\n\n    var delayFunction;\n\n    var setDelayFunction = (fn) => {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    };\n\n    var init_embind = () => {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    };\n\n    var registeredInstances = {};\n\n    var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n        throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n        ptr = class_.upcast(ptr);\n        class_ = class_.baseClass;\n      }\n      return ptr;\n    };\n\n    var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n\n    var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = {\n        value: 1,\n      };\n      return attachFinalizer(\n        Object.create(prototype, {\n          $$: {\n            value: record,\n            writable: true,\n          },\n        }),\n      );\n    };\n\n    /** @suppress {globalThis} */ function RegisteredPointer_fromWireType(ptr) {\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance['clone']();\n        } else {\n          var rv = registeredInstance['clone']();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr: ptr,\n          });\n        }\n      }\n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n\n    var attachFinalizer = (handle) => {\n      if ('undefined' === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          var info = {\n            $$: $$,\n          };\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    };\n\n    var init_ClassHandle = () => {\n      Object.assign(ClassHandle.prototype, {\n        isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = /** @type {Object} */ (other.$$);\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        },\n        clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(\n              Object.create(Object.getPrototypeOf(this), {\n                $$: {\n                  value: shallowCopyInternalPointer(this.$$),\n                },\n              }),\n            );\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n        delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n        isDeleted() {\n          return !this.$$.ptr;\n        },\n        deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        },\n      });\n    };\n\n    /** @constructor */ function ClassHandle() {}\n\n    var createNamedFunction = (name, body) =>\n      Object.defineProperty(body, 'name', {\n        value: name,\n      });\n\n    var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(\n              `Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`,\n            );\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n\n    /** @param {number=} numArguments */ var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (\n          undefined === numArguments ||\n          (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])\n        ) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(\n            `Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`,\n          );\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n\n    var char_0 = 48;\n\n    var char_9 = 57;\n\n    var makeLegalFunctionName = (name) => {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n      return name;\n    };\n\n    /** @constructor */ function RegisteredClass(\n      name,\n      constructor,\n      instancePrototype,\n      rawDestructor,\n      baseClass,\n      getActualType,\n      upcast,\n      downcast,\n    ) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n\n    var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    };\n\n    /** @suppress {globalThis} */ function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    /** @suppress {globalThis} */ function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n      if (!handle || !handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(\n          `Cannot convert argument of type ${\n            handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name\n          } to parameter type ${this.name}`,\n        );\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      if (this.isSmartPointer) {\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError('Passing raw pointer to smart pointer is illegal');\n        }\n        switch (this.sharingPolicy) {\n          case 0:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(\n                `Cannot convert argument of type ${\n                  handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name\n                } to parameter type ${this.name}`,\n              );\n            }\n            break;\n\n          case 1:\n            ptr = handle.$$.smartPtr;\n            break;\n\n          case 2:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle['clone']();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(() => clonedHandle['delete']()),\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n\n          default:\n            throwBindingError('Unsupporting sharing policy');\n        }\n      }\n      return ptr;\n    }\n\n    /** @suppress {globalThis} */ function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    /** @suppress {globalThis} */ function readPointer(pointer) {\n      return this['fromWireType'](HEAPU32[pointer >> 2]);\n    }\n\n    var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        },\n        destructor(ptr) {\n          this.rawDestructor?.(ptr);\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: readPointer,\n        deleteObject(handle) {\n          if (handle !== null) {\n            handle['delete']();\n          }\n        },\n        fromWireType: RegisteredPointer_fromWireType,\n      });\n    };\n\n    /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */ function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor,\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this['toWireType'] = genericPointerToWireType;\n      }\n    }\n\n    /** @param {number=} numArguments */ var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n\n    var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n\n    var wasmTable;\n\n    var getWasmTableEntry = (funcPtr) => wasmTable.get(funcPtr);\n\n    /** @param {Object=} args */ var dynCall = (sig, ptr, args) => {\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    };\n\n    var getDynCaller = (sig, ptr) => {\n      var argCache = [];\n      return function () {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    };\n\n    var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n      var fp = makeDynCaller();\n      if (typeof fp != 'function') {\n        throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n      return fp;\n    };\n\n    var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' + stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n      return errorClass;\n    };\n\n    var UnboundTypeError;\n\n    var getTypeName = (type) => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n\n    var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([', ']));\n    };\n\n    var __embind_register_class = (\n      rawType,\n      rawPointerType,\n      rawConstPointerType,\n      baseClassRawType,\n      getActualTypeSignature,\n      getActualType,\n      upcastSignature,\n      upcast,\n      downcastSignature,\n      downcast,\n      name,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      upcast &&= embind__requireFunction(upcastSignature, upcast);\n      downcast &&= embind__requireFunction(downcastSignature, downcast);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n      exposePublicSymbol(legalFunctionName, function () {\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\n      });\n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        function (base) {\n          base = base[0];\n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n          var constructor = createNamedFunction(name, function () {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(\"Use 'new' to construct \" + name);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(name + ' has no accessible constructor');\n            }\n            var body = registeredClass.constructor_body[arguments.length];\n            if (undefined === body) {\n              throw new BindingError(\n                `Tried to invoke ctor of ${name} with invalid number of parameters (${\n                  arguments.length\n                }) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`,\n              );\n            }\n            return body.apply(this, arguments);\n          });\n          var instancePrototype = Object.create(basePrototype, {\n            constructor: {\n              value: constructor,\n            },\n          });\n          constructor.prototype = instancePrototype;\n          var registeredClass = new RegisteredClass(\n            name,\n            constructor,\n            instancePrototype,\n            rawDestructor,\n            baseClass,\n            getActualType,\n            upcast,\n            downcast,\n          );\n          if (registeredClass.baseClass) {\n            registeredClass.baseClass.__derivedClasses ??= [];\n            registeredClass.baseClass.__derivedClasses.push(registeredClass);\n          }\n          var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n          var pointerConverter = new RegisteredPointer(name + '*', registeredClass, false, false, false);\n          var constPointerConverter = new RegisteredPointer(name + ' const*', registeredClass, false, true, false);\n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter,\n          };\n          replacePublicSymbol(legalFunctionName, constructor);\n          return [referenceConverter, pointerConverter, constPointerConverter];\n        },\n      );\n    };\n\n    var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAPU32[(firstElement + i * 4) >> 2]);\n      }\n      return array;\n    };\n\n    function usesDestructorStack(argTypes) {\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function craftInvokerFunction(\n      humanName,\n      argTypes,\n      classType,\n      cppInvokerFunc,\n      cppTargetFunc,\n      /** boolean= */ isAsync,\n    ) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = usesDestructorStack(argTypes);\n      var returns = argTypes[0].name !== 'void';\n      var expectedArgCount = argCount - 2;\n      var argsWired = new Array(expectedArgCount);\n      var invokerFuncArgs = [];\n      var destructors = [];\n      var invokerFn = function () {\n        if (arguments.length !== expectedArgCount) {\n          throwBindingError(\n            `function ${humanName} called with ${arguments.length} arguments, expected ${expectedArgCount}`,\n          );\n        }\n        destructors.length = 0;\n        var thisWired;\n        invokerFuncArgs.length = isClassMethodFunc ? 2 : 1;\n        invokerFuncArgs[0] = cppTargetFunc;\n        if (isClassMethodFunc) {\n          thisWired = argTypes[1]['toWireType'](destructors, this);\n          invokerFuncArgs[1] = thisWired;\n        }\n        for (var i = 0; i < expectedArgCount; ++i) {\n          argsWired[i] = argTypes[i + 2]['toWireType'](destructors, arguments[i]);\n          invokerFuncArgs.push(argsWired[i]);\n        }\n        var rv = cppInvokerFunc.apply(null, invokerFuncArgs);\n        function onDone(rv) {\n          if (needsDestructorStack) {\n            runDestructors(destructors);\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; i++) {\n              var param = i === 1 ? thisWired : argsWired[i - 2];\n              if (argTypes[i].destructorFunction !== null) {\n                argTypes[i].destructorFunction(param);\n              }\n            }\n          }\n          if (returns) {\n            return argTypes[0]['fromWireType'](rv);\n          }\n        }\n        return onDone(rv);\n      };\n      return createNamedFunction(humanName, invokerFn);\n    }\n\n    var __embind_register_class_constructor = (\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor,\n    ) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(\n            `Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${\n              classType.name\n            }'! Overload resolution is currently only performed using the parameter count, not actual type info!`,\n          );\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n        };\n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(\n            humanName,\n            argTypes,\n            null,\n            invoker,\n            rawConstructor,\n          );\n          return [];\n        });\n        return [];\n      });\n    };\n\n    var getFunctionName = (signature) => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf('(');\n      if (argsIndex !== -1) {\n        return signature.substr(0, argsIndex);\n      } else {\n        return signature;\n      }\n    };\n\n    var __embind_register_class_function = (\n      rawClassType,\n      methodName,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      rawInvoker,\n      context,\n      isPureVirtual,\n      isAsync,\n    ) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n        if (methodName.startsWith('@@')) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n        function unboundTypesHandler() {\n          throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n        }\n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (\n          undefined === method ||\n          (undefined === method.overloadTable &&\n            method.className !== classType.name &&\n            method.argCount === argCount - 2)\n        ) {\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n          if (undefined === proto[methodName].overloadTable) {\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n          return [];\n        });\n        return [];\n      });\n    };\n\n    function handleAllocatorInit() {\n      Object.assign(\n        HandleAllocator.prototype,\n        /** @lends {HandleAllocator.prototype} */ {\n          get(id) {\n            return this.allocated[id];\n          },\n          has(id) {\n            return this.allocated[id] !== undefined;\n          },\n          allocate(handle) {\n            var id = this.freelist.pop() || this.allocated.length;\n            this.allocated[id] = handle;\n            return id;\n          },\n          free(id) {\n            this.allocated[id] = undefined;\n            this.freelist.push(id);\n          },\n        },\n      );\n    }\n\n    /** @constructor */ function HandleAllocator() {\n      this.allocated = [undefined];\n      this.freelist = [];\n    }\n\n    var emval_handles = new HandleAllocator();\n\n    var __emval_decref = (handle) => {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    };\n\n    var count_emval_handles = () => {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    };\n\n    var init_emval = () => {\n      emval_handles.allocated.push(\n        {\n          value: undefined,\n        },\n        {\n          value: null,\n        },\n        {\n          value: true,\n        },\n        {\n          value: false,\n        },\n      );\n      emval_handles.reserved = emval_handles.allocated.length;\n      Module['count_emval_handles'] = count_emval_handles;\n    };\n\n    var Emval = {\n      toValue: (handle) => {\n        if (!handle) {\n          throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handles.get(handle).value;\n      },\n      toHandle: (value) => {\n        switch (value) {\n          case undefined:\n            return 1;\n\n          case null:\n            return 2;\n\n          case true:\n            return 3;\n\n          case false:\n            return 4;\n\n          default: {\n            return emval_handles.allocate({\n              refcount: 1,\n              value: value,\n            });\n          }\n        }\n      },\n    };\n\n    var __embind_register_emval = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: (handle) => {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        toWireType: (destructors, value) => Emval.toHandle(value),\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: simpleReadValueFromPointer,\n        destructorFunction: null,\n      });\n    };\n\n    var enumReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed\n            ? function (pointer) {\n                return this['fromWireType'](HEAP8[pointer >> 0]);\n              }\n            : function (pointer) {\n                return this['fromWireType'](HEAPU8[pointer >> 0]);\n              };\n\n        case 2:\n          return signed\n            ? function (pointer) {\n                return this['fromWireType'](HEAP16[pointer >> 1]);\n              }\n            : function (pointer) {\n                return this['fromWireType'](HEAPU16[pointer >> 1]);\n              };\n\n        case 4:\n          return signed\n            ? function (pointer) {\n                return this['fromWireType'](HEAP32[pointer >> 2]);\n              }\n            : function (pointer) {\n                return this['fromWireType'](HEAPU32[pointer >> 2]);\n              };\n\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n\n    /** @suppress {globalThis} */ var __embind_register_enum = (rawType, name, size, isSigned) => {\n      name = readLatin1String(name);\n      function ctor() {}\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        fromWireType: function (c) {\n          return this.constructor.values[c];\n        },\n        toWireType: (destructors, c) => c.value,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: enumReadValueFromPointer(name, size, isSigned),\n        destructorFunction: null,\n      });\n      exposePublicSymbol(name, ctor);\n    };\n\n    var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(humanName + ' has unknown type ' + getTypeName(rawType));\n      }\n      return impl;\n    };\n\n    var __embind_register_enum_value = (rawEnumType, name, enumValue) => {\n      var enumType = requireRegisteredType(rawEnumType, 'enum');\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue,\n        },\n        constructor: {\n          value: createNamedFunction(`${enumType.name}_${name}`, function () {}),\n        },\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    };\n\n    var embindRepr = (v) => {\n      if (v === null) {\n        return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n        return v.toString();\n      } else {\n        return '' + v;\n      }\n    };\n\n    var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n        case 4:\n          return function (pointer) {\n            return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n\n        case 8:\n          return function (pointer) {\n            return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n\n        default:\n          throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n\n    var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: (value) => value,\n        toWireType: (destructors, value) => value,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: floatReadValueFromPointer(name, size),\n        destructorFunction: null,\n      });\n    };\n\n    var integerReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed ? (pointer) => HEAP8[pointer >> 0] : (pointer) => HEAPU8[pointer >> 0];\n\n        case 2:\n          return signed ? (pointer) => HEAP16[pointer >> 1] : (pointer) => HEAPU16[pointer >> 1];\n\n        case 4:\n          return signed ? (pointer) => HEAP32[pointer >> 2] : (pointer) => HEAPU32[pointer >> 2];\n\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n\n    /** @suppress {globalThis} */ var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var fromWireType = (value) => value;\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n      var isUnsignedType = name.includes('unsigned');\n      var checkAssertions = (value, toTypeName) => {};\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        };\n      } else {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value;\n        };\n      }\n      registerType(primitiveType, {\n        name: name,\n        fromWireType: fromWireType,\n        toWireType: toWireType,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null,\n      });\n    };\n\n    var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        var size = HEAPU32[handle >> 2];\n        var data = HEAPU32[(handle + 4) >> 2];\n        return new TA(HEAP8.buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(\n        rawType,\n        {\n          name: name,\n          fromWireType: decodeMemoryView,\n          argPackAdvance: GenericWireTypeSize,\n          readValueFromPointer: decodeMemoryView,\n        },\n        {\n          ignoreDuplicateRegistrations: true,\n        },\n      );\n    };\n\n    var __embind_register_smart_ptr = (\n      rawType,\n      rawPointeeType,\n      name,\n      sharingPolicy,\n      getPointeeSignature,\n      rawGetPointee,\n      constructorSignature,\n      rawConstructor,\n      shareSignature,\n      rawShare,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      name = readLatin1String(name);\n      rawGetPointee = embind__requireFunction(getPointeeSignature, rawGetPointee);\n      rawConstructor = embind__requireFunction(constructorSignature, rawConstructor);\n      rawShare = embind__requireFunction(shareSignature, rawShare);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      whenDependentTypesAreResolved([rawType], [rawPointeeType], function (pointeeType) {\n        pointeeType = pointeeType[0];\n        var registeredPointer = new RegisteredPointer(\n          name,\n          pointeeType.registeredClass,\n          false,\n          false,\n          true,\n          pointeeType,\n          sharingPolicy,\n          rawGetPointee,\n          rawConstructor,\n          rawShare,\n          rawDestructor,\n        );\n        return [registeredPointer];\n      });\n    };\n\n    var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === 'std::string';\n      registerType(rawType, {\n        name: name,\n        fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var payload = value + 4;\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n          _free(value);\n          return str;\n        },\n        toWireType(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var length;\n          var valueIsOfTypeString = typeof value == 'string';\n          if (\n            !(\n              valueIsOfTypeString ||\n              value instanceof Uint8Array ||\n              value instanceof Uint8ClampedArray ||\n              value instanceof Int8Array\n            )\n          ) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[base >> 2] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n\n    var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;\n\n    var UTF16ToString = (ptr, maxBytesToRead) => {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      var str = '';\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(ptr + i * 2) >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit);\n      }\n      return str;\n    };\n\n    var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      maxBytesToWrite ??= 2147483647;\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    };\n\n    var lengthBytesUTF16 = (str) => str.length * 2;\n\n    var UTF32ToString = (ptr, maxBytesToRead) => {\n      var i = 0;\n      var str = '';\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(ptr + i * 4) >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n\n    var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      maxBytesToWrite ??= 2147483647;\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = (65536 + ((codeUnit & 1023) << 10)) | (trailSurrogate & 1023);\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    };\n\n    var lengthBytesUTF32 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    };\n\n    var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        fromWireType: (value) => {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        toWireType: (destructors, value) => {\n          if (!(typeof value == 'string')) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: simpleReadValueFromPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n\n    var __embind_register_value_object = (\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        fields: [],\n      };\n    };\n\n    var __embind_register_value_object_field = (\n      structType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext,\n    ) => {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext,\n      });\n    };\n\n    var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        argPackAdvance: 0,\n        fromWireType: () => undefined,\n        toWireType: (destructors, o) => undefined,\n      });\n    };\n\n    var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n    var emval_methodCallers = [];\n\n    var __emval_call = (caller, handle, destructorsRef, args) => {\n      caller = emval_methodCallers[caller];\n      handle = Emval.toValue(handle);\n      return caller(null, handle, destructorsRef, args);\n    };\n\n    var emval_addMethodCaller = (caller) => {\n      var id = emval_methodCallers.length;\n      emval_methodCallers.push(caller);\n      return id;\n    };\n\n    var emval_lookupTypes = (argCount, argTypes) => {\n      var a = new Array(argCount);\n      for (var i = 0; i < argCount; ++i) {\n        a[i] = requireRegisteredType(HEAPU32[(argTypes + i * 4) >> 2], 'parameter ' + i);\n      }\n      return a;\n    };\n\n    var reflectConstruct = Reflect.construct;\n\n    var emval_returnValue = (returnType, destructorsRef, handle) => {\n      var destructors = [];\n      var result = returnType['toWireType'](destructors, handle);\n      if (destructors.length) {\n        HEAPU32[destructorsRef >> 2] = Emval.toHandle(destructors);\n      }\n      return result;\n    };\n\n    var __emval_get_method_caller = (argCount, argTypes, kind) => {\n      var types = emval_lookupTypes(argCount, argTypes);\n      var retType = types.shift();\n      argCount--;\n      var argN = new Array(argCount);\n      var invokerFunction = (obj, func, destructorsRef, args) => {\n        var offset = 0;\n        for (var i = 0; i < argCount; ++i) {\n          argN[i] = types[i]['readValueFromPointer'](args + offset);\n          offset += types[i]['argPackAdvance'];\n        }\n        var rv = kind === /* CONSTRUCTOR */ 1 ? reflectConstruct(func, argN) : func.apply(obj, argN);\n        for (var i = 0; i < argCount; ++i) {\n          types[i].deleteObject?.(argN[i]);\n        }\n        return emval_returnValue(retType, destructorsRef, rv);\n      };\n      var functionName = `methodCaller<(${types.map((t) => t.name).join(', ')}) => ${retType.name}>`;\n      return emval_addMethodCaller(createNamedFunction(functionName, invokerFunction));\n    };\n\n    var __emval_incref = (handle) => {\n      if (handle > 4) {\n        emval_handles.get(handle).refcount += 1;\n      }\n    };\n\n    var __emval_run_destructors = (handle) => {\n      var destructors = Emval.toValue(handle);\n      runDestructors(destructors);\n      __emval_decref(handle);\n    };\n\n    var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](arg);\n      return Emval.toHandle(v);\n    };\n\n    var _abort = () => {\n      abort('');\n    };\n\n    var _emscripten_get_now;\n\n    _emscripten_get_now = () => performance.now();\n\n    var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } /*success*/ catch (e) {}\n    };\n\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      requestedSize >>>= 0;\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      var alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => thisProgram || './this.program';\n\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') +\n          '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      HEAP8[buffer >> 0] = 0;\n    };\n\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    var _fd_close = (fd) => 52;\n\n    var _fd_read = (fd, iov, iovcnt, pnum) => 52;\n\n    var convertI32PairToI53Checked = (lo, hi) =>\n      (hi + 2097152) >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      var offset = convertI32PairToI53Checked(offset_low, offset_high);\n      return 70;\n    }\n\n    var printCharBuffers = [null, [], []];\n\n    var printChar = (stream, curr) => {\n      var buffer = printCharBuffers[stream];\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    };\n\n    var _fd_write = (fd, iov, iovcnt, pnum) => {\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr + j]);\n        }\n        num += len;\n      }\n      HEAPU32[pnum >> 2] = num;\n      return 0;\n    };\n\n    var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        return (view) => crypto.getRandomValues(view);\n      } else abort('initRandomDevice');\n    };\n\n    var randomFill = (view) => (randomFill = initRandomFill())(view);\n\n    var _getentropy = (buffer, size) => {\n      randomFill(HEAPU8.subarray(buffer, buffer + size));\n      return 0;\n    };\n\n    var isLeapYear = (year) => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {}\n      return sum;\n    };\n\n    var MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    var MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n      return newDate;\n    };\n\n    /** @type {function(string, boolean=, number=)} */ function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n\n    var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n\n    var _strftime = (s, maxsize, format, tm) => {\n      var tm_zone = HEAPU32[(tm + 40) >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[(tm + 4) >> 2],\n        tm_hour: HEAP32[(tm + 8) >> 2],\n        tm_mday: HEAP32[(tm + 12) >> 2],\n        tm_mon: HEAP32[(tm + 16) >> 2],\n        tm_year: HEAP32[(tm + 20) >> 2],\n        tm_wday: HEAP32[(tm + 24) >> 2],\n        tm_yday: HEAP32[(tm + 28) >> 2],\n        tm_isdst: HEAP32[(tm + 32) >> 2],\n        tm_gmtoff: HEAP32[(tm + 36) >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : '',\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',\n        '%D': '%m/%d/%y',\n        '%F': '%Y-%m-%d',\n        '%h': '%b',\n        '%r': '%I:%M:%S %p',\n        '%R': '%H:%M',\n        '%T': '%H:%M:%S',\n        '%x': '%m/%d/%y',\n        '%X': '%H:%M:%S',\n        '%Ec': '%c',\n        '%EC': '%C',\n        '%Ex': '%m/%d/%y',\n        '%EX': '%H:%M:%S',\n        '%Ey': '%y',\n        '%EY': '%Y',\n        '%Od': '%d',\n        '%Oe': '%e',\n        '%OH': '%H',\n        '%OI': '%I',\n        '%Om': '%m',\n        '%OM': '%M',\n        '%OS': '%S',\n        '%Ou': '%u',\n        '%OU': '%U',\n        '%OV': '%V',\n        '%Ow': '%w',\n        '%OW': '%W',\n        '%Oy': '%y',\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n      ];\n      function leadingSomething(value, digits, character) {\n        var str = typeof value == 'number' ? value.toString() : value || '';\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n        return str;\n      }\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n        var compare;\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n        return compare;\n      }\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n          case 1:\n            return janFourth;\n\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n      function getWeekBasedYear(date) {\n        var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          }\n          return thisDate.getFullYear();\n        }\n        return thisDate.getFullYear() - 1;\n      }\n      var EXPANSION_RULES_2 = {\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0, 3),\n        '%A': (date) => WEEKDAYS[date.tm_wday],\n        '%b': (date) => MONTHS[date.tm_mon].substring(0, 3),\n        '%B': (date) => MONTHS[date.tm_mon],\n        '%C': (date) => {\n          var year = date.tm_year + 1900;\n          return leadingNulls((year / 100) | 0, 2);\n        },\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\n        '%g': (date) => getWeekBasedYear(date).toString().substring(2),\n        '%G': (date) => getWeekBasedYear(date),\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\n        '%I': (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': (date) =>\n          leadingNulls(\n            date.tm_mday +\n              arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1),\n            3,\n          ),\n        '%m': (date) => leadingNulls(date.tm_mon + 1, 2),\n        '%M': (date) => leadingNulls(date.tm_min, 2),\n        '%n': () => '\\n',\n        '%p': (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          }\n          return 'PM';\n        },\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\n        '%t': () => '\\t',\n        '%u': (date) => date.tm_wday || 7,\n        '%U': (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%V': (date) => {\n          var val = Math.floor((date.tm_yday + 7 - ((date.tm_wday + 6) % 7)) / 7);\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear((date.tm_year % 400) - 1))) {\n              val++;\n            }\n          } else if (val == 53) {\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        '%w': (date) => date.tm_wday,\n        '%W': (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%y': (date) => (date.tm_year + 1900).toString().substring(2),\n        '%Y': (date) => date.tm_year + 1900,\n        '%z': (date) => {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = (off / 60) * 100 + (off % 60);\n          return (ahead ? '+' : '-') + String('0000' + off).slice(-4);\n        },\n        '%Z': (date) => date.tm_zone,\n        '%%': () => '%',\n      };\n      pattern = pattern.replace(/%%/g, '\\0\\0');\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, '%');\n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    };\n\n    var _strftime_l = (s, maxsize, format, tm, loc) => _strftime(s, maxsize, format, tm);\n\n    InternalError = Module['InternalError'] = class InternalError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = 'InternalError';\n      }\n    };\n\n    embind_init_charCodes();\n\n    BindingError = Module['BindingError'] = class BindingError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = 'BindingError';\n      }\n    };\n\n    init_ClassHandle();\n\n    init_embind();\n\n    init_RegisteredPointer();\n\n    UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');\n\n    handleAllocatorInit();\n\n    init_emval();\n\n    var wasmImports = {\n      /** @export */ a: ___assert_fail,\n      /** @export */ h: ___cxa_throw,\n      /** @export */ r: ___syscall_fcntl64,\n      /** @export */ I: ___syscall_getcwd,\n      /** @export */ L: ___syscall_ioctl,\n      /** @export */ M: ___syscall_openat,\n      /** @export */ Y: __embind_finalize_value_object,\n      /** @export */ D: __embind_register_bigint,\n      /** @export */ R: __embind_register_bool,\n      /** @export */ x: __embind_register_class,\n      /** @export */ v: __embind_register_class_constructor,\n      /** @export */ e: __embind_register_class_function,\n      /** @export */ Q: __embind_register_emval,\n      /** @export */ z: __embind_register_enum,\n      /** @export */ l: __embind_register_enum_value,\n      /** @export */ t: __embind_register_float,\n      /** @export */ g: __embind_register_integer,\n      /** @export */ c: __embind_register_memory_view,\n      /** @export */ X: __embind_register_smart_ptr,\n      /** @export */ u: __embind_register_std_string,\n      /** @export */ p: __embind_register_std_wstring,\n      /** @export */ y: __embind_register_value_object,\n      /** @export */ k: __embind_register_value_object_field,\n      /** @export */ S: __embind_register_void,\n      /** @export */ F: __emscripten_throw_longjmp,\n      /** @export */ W: __emval_call,\n      /** @export */ B: __emval_decref,\n      /** @export */ V: __emval_get_method_caller,\n      /** @export */ o: __emval_incref,\n      /** @export */ U: __emval_run_destructors,\n      /** @export */ n: __emval_take_value,\n      /** @export */ w: _abort,\n      /** @export */ f: _emscripten_get_now,\n      /** @export */ N: _emscripten_memcpy_js,\n      /** @export */ H: _emscripten_resize_heap,\n      /** @export */ O: _environ_get,\n      /** @export */ P: _environ_sizes_get,\n      /** @export */ s: _fd_close,\n      /** @export */ K: _fd_read,\n      /** @export */ C: _fd_seek,\n      /** @export */ J: _fd_write,\n      /** @export */ T: _getentropy,\n      /** @export */ m: invoke_ii,\n      /** @export */ d: invoke_iii,\n      /** @export */ i: invoke_iiii,\n      /** @export */ q: invoke_iiiiii,\n      /** @export */ j: invoke_vi,\n      /** @export */ b: invoke_vii,\n      /** @export */ E: invoke_viiii,\n      /** @export */ A: invoke_viiij,\n      /** @export */ G: _strftime_l,\n    };\n\n    var wasmExports = createWasm();\n\n    var ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports['_'])();\n\n    var _malloc = (a0) => (_malloc = wasmExports['$'])(a0);\n\n    var _free = (a0) => (_free = wasmExports['ba'])(a0);\n\n    var ___errno_location = () => (___errno_location = wasmExports['__errno_location'])();\n\n    var ___getTypeName = (a0) => (___getTypeName = wasmExports['ca'])(a0);\n\n    var _htonl = (a0) => (_htonl = wasmExports['htonl'])(a0);\n\n    var _htons = (a0) => (_htons = wasmExports['htons'])(a0);\n\n    var _ntohs = (a0) => (_ntohs = wasmExports['ntohs'])(a0);\n\n    var _setThrew = (a0, a1) => (_setThrew = wasmExports['da'])(a0, a1);\n\n    var stackSave = () => (stackSave = wasmExports['ea'])();\n\n    var stackRestore = (a0) => (stackRestore = wasmExports['fa'])(a0);\n\n    var ___cxa_increment_exception_refcount = (a0) =>\n      (___cxa_increment_exception_refcount = wasmExports['__cxa_increment_exception_refcount'])(a0);\n\n    var ___cxa_is_pointer_type = (a0) => (___cxa_is_pointer_type = wasmExports['ga'])(a0);\n\n    var dynCall_iijj = (Module['dynCall_iijj'] = (a0, a1, a2, a3, a4, a5) =>\n      (dynCall_iijj = Module['dynCall_iijj'] = wasmExports['ha'])(a0, a1, a2, a3, a4, a5));\n\n    var dynCall_vijj = (Module['dynCall_vijj'] = (a0, a1, a2, a3, a4, a5) =>\n      (dynCall_vijj = Module['dynCall_vijj'] = wasmExports['ia'])(a0, a1, a2, a3, a4, a5));\n\n    var dynCall_jii = (Module['dynCall_jii'] = (a0, a1, a2) =>\n      (dynCall_jii = Module['dynCall_jii'] = wasmExports['ja'])(a0, a1, a2));\n\n    var dynCall_viiij = (Module['dynCall_viiij'] = (a0, a1, a2, a3, a4, a5) =>\n      (dynCall_viiij = Module['dynCall_viiij'] = wasmExports['ka'])(a0, a1, a2, a3, a4, a5));\n\n    var dynCall_jiji = (Module['dynCall_jiji'] = (a0, a1, a2, a3, a4) =>\n      (dynCall_jiji = Module['dynCall_jiji'] = wasmExports['la'])(a0, a1, a2, a3, a4));\n\n    var dynCall_viijii = (Module['dynCall_viijii'] = (a0, a1, a2, a3, a4, a5, a6) =>\n      (dynCall_viijii = Module['dynCall_viijii'] = wasmExports['ma'])(a0, a1, a2, a3, a4, a5, a6));\n\n    var dynCall_iiiiij = (Module['dynCall_iiiiij'] = (a0, a1, a2, a3, a4, a5, a6) =>\n      (dynCall_iiiiij = Module['dynCall_iiiiij'] = wasmExports['na'])(a0, a1, a2, a3, a4, a5, a6));\n\n    var dynCall_iiiiijj = (Module['dynCall_iiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (dynCall_iiiiijj = Module['dynCall_iiiiijj'] = wasmExports['oa'])(a0, a1, a2, a3, a4, a5, a6, a7, a8));\n\n    var dynCall_iiiiiijj = (Module['dynCall_iiiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) =>\n      (dynCall_iiiiiijj = Module['dynCall_iiiiiijj'] = wasmExports['pa'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9));\n\n    function invoke_vi(index, a1) {\n      var sp = stackSave();\n      try {\n        getWasmTableEntry(index)(a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_vii(index, a1, a2) {\n      var sp = stackSave();\n      try {\n        getWasmTableEntry(index)(a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiii(index, a1, a2, a3) {\n      var sp = stackSave();\n      try {\n        return getWasmTableEntry(index)(a1, a2, a3);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iii(index, a1, a2) {\n      var sp = stackSave();\n      try {\n        return getWasmTableEntry(index)(a1, a2);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_ii(index, a1) {\n      var sp = stackSave();\n      try {\n        return getWasmTableEntry(index)(a1);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n      try {\n        return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiii(index, a1, a2, a3, a4) {\n      var sp = stackSave();\n      try {\n        getWasmTableEntry(index)(a1, a2, a3, a4);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    function invoke_viiij(index, a1, a2, a3, a4, a5) {\n      var sp = stackSave();\n      try {\n        dynCall_viiij(index, a1, a2, a3, a4, a5);\n      } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0);\n      }\n    }\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n        postRun();\n      }\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    return moduleArg.ready;\n  };\n})();\nexport default createDotLottiePlayerModule;\n","/**\n * Copyright 2024 Design Barn Inc.\n */\n\nimport pkg from '../../package.json';\n\nimport createDotLottiePlayerModule from './dotlottie-player';\nimport type { MainModule } from './dotlottie-player.types';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class DotLottieWasmLoader {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private static _ModulePromise: Promise<MainModule> | null = null;\n\n  // URL for the WASM file, constructed using package information\n  private static _wasmURL = `https://cdn.jsdelivr.net/npm/${pkg.name}@${pkg.version}/dist/dotlottie-player.wasm`;\n\n  private constructor() {\n    throw new Error('RendererLoader is a static class and cannot be instantiated.');\n  }\n\n  private static async _tryLoad(url: string): Promise<MainModule> {\n    const module = await createDotLottiePlayerModule({ locateFile: () => url });\n\n    return module;\n  }\n\n  /**\n   * Tries to load the WASM module from the primary URL, falling back to a backup URL if necessary.\n   * Throws an error if both URLs fail to load the module.\n   * @returns Promise<Module> - A promise that resolves to the loaded module.\n   */\n  private static async _loadWithBackup(): Promise<MainModule> {\n    if (!this._ModulePromise) {\n      this._ModulePromise = this._tryLoad(this._wasmURL).catch(async (initialError): Promise<MainModule> => {\n        const backupUrl = `https://unpkg.com/${pkg.name}@${pkg.version}/dist/dotlottie-player.wasm`;\n\n        console.warn(`Trying backup URL for WASM loading: ${backupUrl}`);\n        try {\n          return await this._tryLoad(backupUrl);\n        } catch (backupError) {\n          console.error(\n            `Both primary and backup WASM URLs failed. Primary error: ${\n              (initialError as Error).message\n            }, Backup error: ${(backupError as Error).message}`,\n          );\n          throw new Error('WASM loading failed from all sources.');\n        }\n      });\n    }\n\n    return this._ModulePromise;\n  }\n\n  /**\n   * Public method to load the WebAssembly module.\n   * Utilizes a primary and backup URL for robustness.\n   * @returns Promise<Module> - A promise that resolves to the loaded module.\n   */\n  public static async load(): Promise<MainModule> {\n    return this._loadWithBackup();\n  }\n\n  /**\n   * Sets a new URL for the WASM file and invalidates the current module promise.\n   *\n   * @param string -  The new URL for the WASM file.\n   */\n  public static setWasmUrl(url: string): void {\n    this._wasmURL = url;\n    // Invalidate current module promise\n    this._ModulePromise = null;\n  }\n}\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\n/**\n * Represents the different types of events that can be dispatched.\n */\nexport type EventType =\n  | 'complete'\n  | 'frame'\n  | 'load'\n  | 'loadError'\n  | 'loop'\n  | 'pause'\n  | 'play'\n  | 'stop'\n  | 'destroy'\n  | 'freeze'\n  | 'unfreeze'\n  | 'render';\n\n/**\n * Maps an event type string to its respective event interface.\n */\ntype EventByType<T> = T extends 'complete'\n  ? CompleteEvent\n  : T extends 'frame'\n  ? FrameEvent\n  : T extends 'load'\n  ? LoadEvent\n  : T extends 'loadError'\n  ? LoadErrorEvent\n  : T extends 'loop'\n  ? LoopEvent\n  : T extends 'pause'\n  ? PauseEvent\n  : T extends 'play'\n  ? PlayEvent\n  : T extends 'stop'\n  ? StopEvent\n  : T extends 'destroy'\n  ? DestroyEvent\n  : T extends 'freeze'\n  ? FreezeEvent\n  : T extends 'unfreeze'\n  ? UnfreezeEvent\n  : T extends 'render'\n  ? RenderEvent\n  : never;\n\n/**\n * Base interface for all events.\n */\nexport interface BaseEvent {\n  type: EventType;\n}\n\nexport interface RenderEvent extends BaseEvent {\n  currentFrame: number;\n  type: 'render';\n}\n\nexport interface FreezeEvent extends BaseEvent {\n  type: 'freeze';\n}\n\nexport interface UnfreezeEvent extends BaseEvent {\n  type: 'unfreeze';\n}\n\n/*\n * Event fired when a destroy action occurs.\n */\nexport interface DestroyEvent extends BaseEvent {\n  type: 'destroy';\n}\n\n/**\n * Event fired when a loop action occurs.\n */\nexport interface LoopEvent extends BaseEvent {\n  loopCount: number;\n  type: 'loop';\n}\n\n/**\n * Event fired during frame changes.\n */\nexport interface FrameEvent extends BaseEvent {\n  currentFrame: number;\n  type: 'frame';\n}\n\n/**\n * Event fired when a load action occurs.\n */\nexport interface LoadEvent extends BaseEvent {\n  type: 'load';\n}\n\n/**\n * Event fired when a loading error occurs.\n */\nexport interface LoadErrorEvent extends BaseEvent {\n  error: Error;\n  type: 'loadError';\n}\n\n/**\n * Event fired when a completion action occurs.\n */\nexport interface CompleteEvent extends BaseEvent {\n  type: 'complete';\n}\n\n/**\n * Event fired when a pause action occurs.\n */\nexport interface PauseEvent extends BaseEvent {\n  type: 'pause';\n}\n\n/**\n * Event fired when a play action occurs.\n */\nexport interface PlayEvent extends BaseEvent {\n  type: 'play';\n}\n\n/**\n * Event fired when a stop action occurs.\n */\nexport interface StopEvent extends BaseEvent {\n  type: 'stop';\n}\n\n/**\n * Represents all possible event types.\n */\nexport type Event =\n  | LoopEvent\n  | FrameEvent\n  | LoadEvent\n  | LoadErrorEvent\n  | CompleteEvent\n  | PauseEvent\n  | PlayEvent\n  | StopEvent;\n\n/**\n * Type for event listener callbacks.\n */\nexport interface EventListener<T extends EventType> {\n  (event: EventByType<T>): void;\n}\n\n/**\n * Manages registration and dispatching of event listeners.\n */\nexport class EventManager {\n  private readonly _eventListeners: Map<EventType, Set<EventListener<EventType>>> = new Map();\n\n  public addEventListener<T extends EventType>(type: T, listener: EventListener<T>): void {\n    let listeners = this._eventListeners.get(type);\n\n    if (!listeners) {\n      listeners = new Set<EventListener<T>>();\n      this._eventListeners.set(type, listeners);\n    }\n\n    listeners.add(listener);\n  }\n\n  public removeEventListener<T extends EventType>(type: T, listener?: EventListener<T>): void {\n    const listeners = this._eventListeners.get(type);\n\n    if (!listeners) return;\n\n    if (listener) {\n      listeners.delete(listener);\n\n      if (listeners.size === 0) {\n        this._eventListeners.delete(type);\n      }\n    } else {\n      this._eventListeners.delete(type);\n    }\n  }\n\n  public dispatch<T extends EventType>(event: EventByType<T>): void {\n    const listeners = this._eventListeners.get(event.type);\n\n    listeners?.forEach((listener) => listener(event));\n  }\n\n  public removeAllEventListeners(): void {\n    this._eventListeners.clear();\n  }\n}\n","/**\n * Copyright 2024 Design Barn Inc.\n */\n\nimport { AnimationFrameManager } from './animation-frame-manager';\nimport { IS_BROWSER } from './constants';\nimport type { DotLottiePlayer, MainModule, Mode as CoreMode, VectorFloat } from './core';\nimport { DotLottieWasmLoader } from './core';\nimport type { EventListener, EventType } from './event-manager';\nimport { EventManager } from './event-manager';\n\nexport interface RenderConfig {\n  devicePixelRatio?: number;\n}\n\nexport type Mode = 'forward' | 'reverse' | 'bounce' | 'reverse-bounce';\n\nexport type Data = string | ArrayBuffer | Record<string, unknown>;\n\nexport interface Config {\n  autoplay?: boolean;\n  backgroundColor?: string;\n  canvas: HTMLCanvasElement;\n  data?: Data;\n  loop?: boolean;\n  mode?: Mode;\n  renderConfig?: RenderConfig;\n  segments?: [number, number];\n  speed?: number;\n  src?: string;\n  useFrameInterpolation?: boolean;\n}\n\nexport interface Manifest {\n  activeAnimationId?: string;\n  animations: Array<{\n    autoplay?: boolean;\n    defaultTheme?: string;\n    direction?: 1 | -1;\n    hover?: boolean;\n    id: string;\n    intermission?: number;\n    loop?: boolean | number;\n    playMode?: 'bounce' | 'normal';\n    speed?: number;\n    themeColor?: string;\n  }>;\n  author?: string;\n  custom?: Record<string, unknown>;\n  description?: string;\n  generator?: string;\n  keywords?: string;\n  revision?: number;\n  states?: string[];\n  themes?: Array<{ animations: string[]; id: string }>;\n  version?: string;\n}\n\nconst createCoreMode = (mode: Mode, module: MainModule): CoreMode => {\n  if (mode === 'reverse') {\n    return module.Mode.Reverse;\n  } else if (mode === 'bounce') {\n    return module.Mode.Bounce;\n  } else if (mode === 'reverse-bounce') {\n    return module.Mode.ReverseBounce;\n  } else {\n    return module.Mode.Forward;\n  }\n};\n\nconst createCoreSegments = (segments: number[], module: MainModule): VectorFloat => {\n  const coreSegments = new module.VectorFloat();\n\n  if (segments.length !== 2) return coreSegments;\n\n  coreSegments.push_back(segments[0] as number);\n  coreSegments.push_back(segments[1] as number);\n\n  return coreSegments;\n};\n\nexport class DotLottie {\n  private readonly _canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  private _context: CanvasRenderingContext2D | null;\n\n  private readonly _eventManager: EventManager;\n\n  private _animationFrameId: number | null = null;\n\n  private readonly _frameManager: AnimationFrameManager;\n\n  private _dotLottieCore: DotLottiePlayer | null = null;\n\n  private _wasmModule: MainModule | null = null;\n\n  private _renderConfig: RenderConfig = {};\n\n  private _isFrozen: boolean = false;\n\n  private _backgroundColor: string | null = null;\n\n  public constructor(config: Config) {\n    this._canvas = config.canvas;\n    this._context = this._canvas.getContext('2d');\n    this._eventManager = new EventManager();\n    this._frameManager = new AnimationFrameManager();\n    this._renderConfig = config.renderConfig ?? {};\n\n    DotLottieWasmLoader.load()\n      .then((module) => {\n        this._wasmModule = module;\n\n        this._dotLottieCore = new module.DotLottiePlayer({\n          autoplay: config.autoplay ?? false,\n          backgroundColor: 0,\n          loopAnimation: config.loop ?? false,\n          mode: createCoreMode(config.mode ?? 'forward', module),\n          segments: createCoreSegments(config.segments ?? [], module),\n          speed: config.speed ?? 1,\n          useFrameInterpolation: config.useFrameInterpolation ?? true,\n        });\n\n        if (config.data) {\n          this._loadFromData(config.data);\n        } else if (config.src) {\n          this._loadFromSrc(config.src);\n        }\n\n        if (config.backgroundColor) {\n          this.setBackgroundColor(config.backgroundColor);\n        }\n      })\n      .catch((error) => {\n        this._eventManager.dispatch({\n          type: 'loadError',\n          error: new Error(`Failed to load wasm module: ${error}`),\n        });\n      });\n  }\n\n  private _loadFromSrc(src: string): void {\n    async function load(): Promise<string | ArrayBuffer> {\n      const response = await fetch(src);\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch the animation data from URL: ${src}. ${response.status}: ${response.statusText}`,\n        );\n      }\n\n      const contentType = response.headers.get('content-type');\n\n      let data: string | ArrayBuffer;\n\n      if (['application/json', 'text/plain'].includes(contentType ?? '')) {\n        data = await response.text();\n      } else {\n        data = await response.arrayBuffer();\n      }\n\n      return data;\n    }\n\n    load()\n      .then((data) => {\n        this._loadFromData(data);\n      })\n      .catch((error) => {\n        this._eventManager.dispatch({\n          type: 'loadError',\n          error: new Error(`Failed to load animation data from URL: ${src}. ${error}`),\n        });\n      });\n  }\n\n  private _loadFromData(data: Data): void {\n    if (this._dotLottieCore === null) return;\n\n    const width = this._canvas.width;\n    const height = this._canvas.height;\n\n    let loaded = false;\n\n    if (typeof data === 'string') {\n      loaded = this._dotLottieCore.loadAnimationData(data, width, height);\n    } else if (data instanceof ArrayBuffer) {\n      loaded = this._dotLottieCore.loadDotLottieData(data, width, height);\n    } else if (typeof data === 'object') {\n      loaded = this._dotLottieCore.loadAnimationData(JSON.stringify(data), width, height);\n    } else {\n      this._eventManager.dispatch({\n        type: 'loadError',\n        error: new Error('Unsupported data type for animation data. Expected a string or ArrayBuffer.'),\n      });\n\n      return;\n    }\n\n    if (loaded) {\n      this._eventManager.dispatch({ type: 'load' });\n\n      if (IS_BROWSER) {\n        this.resize();\n      }\n\n      this._eventManager.dispatch({\n        type: 'frame',\n        currentFrame: this._dotLottieCore.currentFrame(),\n      });\n\n      this._render();\n\n      if (this._dotLottieCore.config().autoplay) {\n        this._dotLottieCore.play();\n        if (this._dotLottieCore.isPlaying()) {\n          this._eventManager.dispatch({ type: 'play' });\n          this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this));\n        } else {\n          console.error('something went wrong, the animation was suppose to autoplay');\n        }\n      }\n    } else {\n      this._eventManager.dispatch({\n        type: 'loadError',\n        error: new Error('Failed to load animation data'),\n      });\n    }\n  }\n\n  public get manifest(): Manifest | null {\n    try {\n      const manifest = this._dotLottieCore?.manifestString();\n\n      if (this._dotLottieCore === null || !manifest) return null;\n\n      const manifestJson = JSON.parse(manifest);\n\n      if (Object.keys(manifestJson).length === 0) return null;\n\n      return manifestJson as Manifest;\n    } catch (_err) {\n      return null;\n    }\n  }\n\n  public get renderConfig(): RenderConfig {\n    return this._renderConfig;\n  }\n\n  public get segments(): [number, number] | undefined {\n    const segments = this._dotLottieCore?.config().segments;\n\n    if (segments && segments.size() === 2) {\n      return [segments.get(0) as number, segments.get(1) as number];\n    }\n\n    return undefined;\n  }\n\n  public get loop(): boolean {\n    return this._dotLottieCore?.config().loopAnimation ?? false;\n  }\n\n  public get mode(): Mode {\n    const mode = this._dotLottieCore?.config().mode;\n\n    if (mode === this._wasmModule?.Mode.Reverse) {\n      return 'reverse';\n    } else if (mode === this._wasmModule?.Mode.Bounce) {\n      return 'bounce';\n    } else if (mode === this._wasmModule?.Mode.ReverseBounce) {\n      return 'reverse-bounce';\n    } else {\n      return 'forward';\n    }\n  }\n\n  public get isFrozen(): boolean {\n    return this._isFrozen;\n  }\n\n  public get backgroundColor(): string {\n    return this._backgroundColor ?? '';\n  }\n\n  public get autoplay(): boolean {\n    return this._dotLottieCore?.config().autoplay ?? false;\n  }\n\n  public get useFrameInterpolation(): boolean {\n    return this._dotLottieCore?.config().useFrameInterpolation ?? false;\n  }\n\n  public get speed(): number {\n    return this._dotLottieCore?.config().speed ?? 0;\n  }\n\n  public get isLoaded(): boolean {\n    return this._dotLottieCore?.isLoaded() ?? false;\n  }\n\n  public get isPlaying(): boolean {\n    return this._dotLottieCore?.isPlaying() ?? false;\n  }\n\n  public get isPaused(): boolean {\n    return this._dotLottieCore?.isPaused() ?? false;\n  }\n\n  public get isStopped(): boolean {\n    return this._dotLottieCore?.isStopped() ?? false;\n  }\n\n  public get currentFrame(): number {\n    return this._dotLottieCore?.currentFrame() ?? 0;\n  }\n\n  public get loopCount(): number {\n    return this._dotLottieCore?.loopCount() ?? 0;\n  }\n\n  public get totalFrames(): number {\n    return this._dotLottieCore?.totalFrames() ?? 0;\n  }\n\n  public get duration(): number {\n    return this._dotLottieCore?.duration() ?? 0;\n  }\n\n  public load(config: Omit<Config, 'canvas'>): void {\n    if (this._dotLottieCore === null || this._wasmModule === null) return;\n\n    this._dotLottieCore.setConfig({\n      autoplay: config.autoplay ?? false,\n      backgroundColor: 0,\n      loopAnimation: config.loop ?? false,\n      mode: createCoreMode(config.mode ?? 'forward', this._wasmModule),\n      segments: createCoreSegments(config.segments ?? [], this._wasmModule),\n      speed: config.speed ?? 1,\n      useFrameInterpolation: config.useFrameInterpolation ?? true,\n    });\n\n    if (config.data) {\n      this._loadFromData(config.data);\n    } else if (config.src) {\n      this._loadFromSrc(config.src);\n    }\n\n    this.setBackgroundColor(config.backgroundColor ?? '');\n  }\n\n  private _render(): boolean {\n    if (this._dotLottieCore === null || this._context === null) return false;\n\n    const rendered = this._dotLottieCore.render();\n\n    if (rendered) {\n      const buffer = this._dotLottieCore.buffer() as Uint8ClampedArray;\n\n      const imageData = this._context.createImageData(this._canvas.width, this._canvas.height);\n\n      imageData.data.set(buffer);\n\n      this._context.putImageData(imageData, 0, 0);\n\n      this._eventManager.dispatch({\n        type: 'render',\n        currentFrame: this._dotLottieCore.currentFrame(),\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private _draw(): void {\n    if (this._dotLottieCore === null || this._context === null || !this._dotLottieCore.isPlaying()) return;\n\n    const nextFrame = this._dotLottieCore.requestFrame();\n\n    const updated = this._dotLottieCore.setFrame(nextFrame);\n\n    if (updated) {\n      this._eventManager.dispatch({\n        type: 'frame',\n        currentFrame: this._dotLottieCore.currentFrame(),\n      });\n\n      const rendered = this._render();\n\n      if (rendered) {\n        // handle loop or complete\n        if (this._dotLottieCore.isComplete()) {\n          if (this._dotLottieCore.config().loopAnimation) {\n            this._eventManager.dispatch({\n              type: 'loop',\n              loopCount: this._dotLottieCore.loopCount(),\n            });\n          } else {\n            this._eventManager.dispatch({ type: 'complete' });\n          }\n        }\n      }\n    }\n\n    this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this));\n  }\n\n  public play(): void {\n    if (this._dotLottieCore === null) return;\n\n    const ok = this._dotLottieCore.play();\n\n    this._isFrozen = false;\n\n    if (ok) {\n      this._eventManager.dispatch({ type: 'play' });\n      this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this));\n    }\n  }\n\n  public pause(): void {\n    if (this._dotLottieCore === null) return;\n\n    const ok = this._dotLottieCore.pause();\n\n    if (ok) {\n      this._eventManager.dispatch({ type: 'pause' });\n    }\n  }\n\n  public stop(): void {\n    if (this._dotLottieCore === null) return;\n\n    const ok = this._dotLottieCore.stop();\n\n    if (ok) {\n      this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() });\n\n      this._render();\n\n      this._eventManager.dispatch({ type: 'stop' });\n    }\n  }\n\n  public setFrame(frame: number): void {\n    if (this._dotLottieCore === null) return;\n\n    if (frame < 0 || frame > this._dotLottieCore.totalFrames()) return;\n\n    const ok = this._dotLottieCore.seek(frame);\n\n    if (ok) {\n      this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() });\n\n      this._render();\n    }\n  }\n\n  public setSpeed(speed: number): void {\n    if (this._dotLottieCore === null) return;\n\n    this._dotLottieCore.setConfig({\n      ...this._dotLottieCore.config(),\n      speed,\n    });\n  }\n\n  public setBackgroundColor(color: string): void {\n    if (this._dotLottieCore === null) return;\n\n    if (this._canvas instanceof HTMLCanvasElement) {\n      this._canvas.style.backgroundColor = color;\n    }\n\n    this._backgroundColor = color;\n  }\n\n  public setLoop(loop: boolean): void {\n    if (this._dotLottieCore === null) return;\n\n    this._dotLottieCore.setConfig({\n      ...this._dotLottieCore.config(),\n      loopAnimation: loop,\n    });\n  }\n\n  public setUseFrameInterpolation(useFrameInterpolation: boolean): void {\n    if (this._dotLottieCore === null) return;\n\n    this._dotLottieCore.setConfig({\n      ...this._dotLottieCore.config(),\n      useFrameInterpolation,\n    });\n  }\n\n  public addEventListener<T extends EventType>(type: T, listener: EventListener<T>): void {\n    this._eventManager.addEventListener(type, listener);\n  }\n\n  public removeEventListener<T extends EventType>(type: T, listener?: EventListener<T>): void {\n    this._eventManager.removeEventListener(type, listener);\n  }\n\n  public destroy(): void {\n    this._dotLottieCore?.delete();\n    this._dotLottieCore = null;\n    this._context = null;\n\n    this._eventManager.dispatch({\n      type: 'destroy',\n    });\n\n    this._eventManager.removeAllEventListeners();\n  }\n\n  public freeze(): void {\n    if (this._animationFrameId === null) return;\n\n    this._frameManager.cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = null;\n\n    this._isFrozen = true;\n\n    this._eventManager.dispatch({ type: 'freeze' });\n  }\n\n  public unfreeze(): void {\n    if (this._animationFrameId !== null) return;\n\n    this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this));\n\n    this._isFrozen = false;\n\n    this._eventManager.dispatch({ type: 'unfreeze' });\n  }\n\n  public resize(): void {\n    if (!IS_BROWSER || !(this._canvas instanceof HTMLCanvasElement)) return;\n\n    const dpr = this._renderConfig.devicePixelRatio || window.devicePixelRatio || 1;\n\n    const { height: clientHeight, width: clientWidth } = this._canvas.getBoundingClientRect();\n\n    this._canvas.width = clientWidth * dpr;\n    this._canvas.height = clientHeight * dpr;\n\n    const ok = this._dotLottieCore?.resize(this._canvas.width, this._canvas.height);\n\n    if (ok) {\n      this._render();\n    }\n  }\n\n  public setSegments(startFrame: number, endFrame: number): void {\n    if (this._dotLottieCore === null || this._wasmModule === null) return;\n\n    this._dotLottieCore.setConfig({\n      ...this._dotLottieCore.config(),\n      segments: createCoreSegments([startFrame, endFrame], this._wasmModule),\n    });\n  }\n\n  public setMode(mode: Mode): void {\n    if (this._dotLottieCore === null || this._wasmModule === null) return;\n\n    this._dotLottieCore.setConfig({\n      ...this._dotLottieCore.config(),\n      mode: createCoreMode(mode, this._wasmModule),\n    });\n  }\n\n  public setRenderConfig(config: RenderConfig): void {\n    this._renderConfig = config;\n  }\n\n  public loadAnimation(animationId: string): void {\n    if (this._dotLottieCore === null) return;\n\n    const loaded = this._dotLottieCore.loadAnimation(animationId, this._canvas.width, this._canvas.height);\n\n    if (loaded) {\n      this._eventManager.dispatch({ type: 'load' });\n      this.resize();\n    } else {\n      this._eventManager.dispatch({\n        type: 'loadError',\n        error: new Error(`Failed to animation :${animationId}`),\n      });\n    }\n  }\n\n  public static setWasmUrl(url: string): void {\n    DotLottieWasmLoader.setWasmUrl(url);\n  }\n}\n"]}